Generate an Apex class using WSDL2Apex and write a test class.
Generate an Apex class using WSDL2Apex for a SOAP web service, write unit tests that achieve 100% code coverage for the class using a mock response, and run your Apex tests.
Generate a class using this using this WSDL file:
Name: ParkService (Tip: After you click the Parse WSDL button, change the Apex Class Name from parksServices to ParkService)
Class must be in public scope
Create a class:
Name: ParkLocator
Class must have a country method that uses the ParkService class
Method must return an array of available park names for a particular country passed to the web service (such as Germany, India, Japan, and United States)
Create a test class:
Name: ParkLocatorTest
Test class uses a mock class called ParkServiceMock to mock the callout response
Create unit tests:

Unit tests must cover all lines of code included in the ParkLocator class, resulting in 100% code coverage.
Run your test class at least once (via Run All tests the Developer Console) before attempting to verify this challenge.



 ============================= APEX CLASS ===================================
 public class ParkLocator {
    public static List<String> country(String Country){
       ParkService.ParksImplPort parkservice= new ParkService.ParksImplPort();
        return parkservice.byCountry(Country);
    }
}


========================= APEX TEST CLASS ===============================

@isTest
public class ParkLocatorTest {
	@isTest static void testParkLocator() {              
        // This causes a fake response to be generated
        Test.setMock(WebServiceMock.class, new ParkServiceMock());
        // Call the method that invokes a callout
        String country= 'India';
        List<String> result = ParkLocator.country(country);
        // Verify that a fake result is returned
        	List<String> park =new List<String>();
               park.add('Old Park');
               park.add('New Park');
               park.add('Children Park');
        System.assertEquals(park, result); 
    }
}

====================================== APEX MOCK CLASS =================================

@isTest
global class ParkServiceMock implements WebServiceMock {
   global void doInvoke(
           Object stub,
           Object request,
           Map<String, Object> response,
           String endpoint,
           String soapAction,
           String requestName,
           String responseNS,
           String responseName,
           String responseType) {
        // start - specify the response you want to send
           List<String> park =new List<String>();
               park.add('Old Park');
               park.add('New Park');
               park.add('Children Park');
        ParkService.byCountryResponse response_x = 
            new ParkService.byCountryResponse();
        response_x.return_x = park;
        // end
        response.put('response_x', response_x); 
   }
}


 
